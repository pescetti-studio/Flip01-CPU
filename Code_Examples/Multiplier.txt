// Calculate the product of two numbers, varA and varB (e.g. varA = 10, varB = 5), and store it in RES

// Initialize the two operand
varA = 10
varB = 5

// Inizialize the result
RES = 0

// Initialize AX to 0 (accumulator for the result)
load$ AX 0

// Load value of varB from memory into BX (multiplier)
load BX varB

// Compare varB with 0
cmp$ BX 0

// If varB is 0, jump to the end (result is 0)
je END

MUL_LOOP:

// Add varA to the result (AX = AX + varA)
add AX varA

// Decrement BX by 1
dec BX

// Compare BX with 0
cmp$ BX 0

// If the value in BX > 0, repeat the loop
jg MUL_LOOP
END:

// Save the value from AX to RES into the RAM
store AX RES

stop
