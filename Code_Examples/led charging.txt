// Connecting the AX register to a vector of 8 LEDs that can display its current value, this program uses that vector to show an animation gradually filling up the LED bar.

// to run the program on Logisim, declare a port between 4 and 7 (inclusive)
// to run the program on the FPGA board, declare a port between 0 and 1
< led 4

// (1)dec = (00000001)bin
var1 = 1
// (128)dec = (10000000)bin
var2 = 128

loop:
load ax var1
load bx var2

andR
jz new
load ax var1
shiftl$ bx 1
orR
store ax var1
load$ bx 128
store bx var2
cmp$ ax 255
je end
jmp loop

// This function runs when the "falling" bit reaches the previously saved level, adding it to that level and setting the registers for a new cycle
new:
load ax var1
orR
shiftr$ bx 1
store bx var2
jmp loop

// This function runs if the LED vector is fully activated, then turns on the external LED and ends execution
end:
load$ bx 1
output bx led
store bx var1
load$ bx 128
store bx var2

stop